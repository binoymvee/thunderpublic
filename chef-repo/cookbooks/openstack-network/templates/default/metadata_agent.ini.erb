<%= node["openstack"]["network"]["custom_template_banner"] %>

[DEFAULT]
# Show debugging output in log (sets DEBUG log level output)
debug = <%= node["openstack"]["network"]["debug"] %>

# The Neutron user information for accessing the Neutron API.
auth_url = <%= @identity_endpoint.to_s %>
auth_region = <%= node["openstack"]["network"]["region"] %>
admin_tenant_name = <%= node["openstack"]["network"]["service_tenant_name"] %>
admin_user = <%= node["openstack"]["network"]["service_user"] %>
admin_password = <%= @service_pass %>

# IP address used by Nova metadata server
# Default: nova_metadata_ip = 127.0.0.1
<% if node["openstack"]["network"]["metadata"]["nova_metadata_ip"] -%>
nova_metadata_ip = <%= node["openstack"]["network"]["metadata"]["nova_metadata_ip"] %>
<% end -%>

# TCP Port used by Nova metadata server
# Default: nova_metadata_port = 8775
<% if node["openstack"]["network"]["metadata"]["nova_metadata_port"] -%>
nova_metadata_port = <%= node["openstack"]["network"]["metadata"]["nova_metadata_port"] %>
<% end -%>

# Which protocol to use for requests to Nova metadata server, http or https
# nova_metadata_protocol = http

# Whether insecure SSL connection should be accepted for Nova metadata server
# requests
# nova_metadata_insecure = False

# Client certificate for nova api, needed when nova api requires client
# certificates
# nova_client_cert =

# Private key for nova client certificate
# nova_client_priv_key =

# When proxying metadata requests, Neutron signs the Instance-ID header with a
# shared secret to prevent spoofing.  You may select any string for a secret,
# but it must match here and in the configuration used by the Nova Metadata
# Server. NOTE: Nova uses a different key: neutron_metadata_proxy_shared_secret
metadata_proxy_shared_secret = <%= @metadata_secret %>

# Location of Metadata Proxy UNIX domain socket
# metadata_proxy_socket = $state_path/metadata_proxy

# Number of separate worker processes for metadata server. Defaults to
# half the number of CPU cores
# metadata_workers =

# Number of backlog requests to configure the metadata server socket with
# metadata_backlog = 4096

# URL to connect to the cache backend.
# default_ttl=0 parameter will cause cache entries to never expire.
# Otherwise default_ttl specifies time in seconds a cache entry is valid for.
# No cache is used in case no value is passed.
# cache_url = memory://?default_ttl=5
